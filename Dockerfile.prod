FROM php:8.2-apache

# Instalar dependências do sistema
RUN apt-get update && apt-get install -y \
    libzip-dev \
    zip \
    unzip \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libonig-dev \
    libxml2-dev \
    libgd-dev \
    libmagickwand-dev \
    imagemagick \
    git \
    curl \
    mariadb-client \
    && rm -rf /var/lib/apt/lists/*

# Instalar extensões PHP
RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) \
    pdo_mysql \
    mysqli \
    zip \
    gd \
    mbstring \
    xml \
    fileinfo

# Instalar Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Configurar Apache
RUN a2enmod rewrite
RUN a2enmod headers

# Configurar PHP para uploads grandes
RUN echo "upload_max_filesize = 10G" >> /usr/local/etc/php/conf.d/uploads.ini \
    && echo "post_max_size = 10G" >> /usr/local/etc/php/conf.d/uploads.ini \
    && echo "max_execution_time = 3600" >> /usr/local/etc/php/conf.d/uploads.ini \
    && echo "max_input_time = 3600" >> /usr/local/etc/php/conf.d/uploads.ini \
    && echo "memory_limit = 2G" >> /usr/local/etc/php/conf.d/uploads.ini

# Configurar Apache para uploads grandes
RUN echo "LimitRequestBody 10737418240" >> /etc/apache2/apache2.conf

# Criar diretórios necessários
RUN mkdir -p /var/www/html/uploads \
    && mkdir -p /var/www/html/logs \
    && chown -R www-data:www-data /var/www/html/uploads \
    && chown -R www-data:www-data /var/www/html/logs

WORKDIR /var/www/html

# Copiar código da aplicação
COPY src/ /var/www/html/
COPY database/ /var/www/html/database/

# Criar arquivo de configuração de banco de dados no diretório raiz
RUN echo '<?php \
define("DB_HOST", getenv("DB_HOST") ?: "localhost"); \
define("DB_NAME", getenv("DB_NAME") ?: "upload_system"); \
define("DB_USER", getenv("DB_USER") ?: "root"); \
define("DB_PASS", getenv("DB_PASS") ?: ""); \
define("SMTP_HOST", getenv("SMTP_HOST") ?: "localhost"); \
define("SMTP_PORT", getenv("SMTP_PORT") ?: "1025"); \
define("SMTP_USER", getenv("SMTP_USER") ?: ""); \
define("SMTP_PASS", getenv("SMTP_PASS") ?: ""); \
define("SMTP_FROM", getenv("SMTP_FROM") ?: "noreply@pixfilmes.com"); \
define("SMTP_FROM_NAME", getenv("SMTP_FROM_NAME") ?: "Pix Transfer"); \
?>' > /var/www/html/env.php

# Criar script de inicialização simplificado
RUN echo '#!/bin/bash' > /usr/local/bin/start.sh && \
    echo 'set -e' >> /usr/local/bin/start.sh && \
    echo '' >> /usr/local/bin/start.sh && \
    echo 'echo "Aguardando banco de dados..."' >> /usr/local/bin/start.sh && \
    echo 'while ! mysqladmin ping -h"$DB_HOST" -u"$DB_USER" -p"$DB_PASS" --silent; do' >> /usr/local/bin/start.sh && \
    echo '    echo "Aguardando MySQL em $DB_HOST..."' >> /usr/local/bin/start.sh && \
    echo '    sleep 2' >> /usr/local/bin/start.sh && \
    echo 'done' >> /usr/local/bin/start.sh && \
    echo '' >> /usr/local/bin/start.sh && \
    echo 'echo "Banco de dados disponível!"' >> /usr/local/bin/start.sh && \
    echo '' >> /usr/local/bin/start.sh && \
    echo 'echo "Iniciando Apache..."' >> /usr/local/bin/start.sh && \
    echo 'exec apache2-foreground' >> /usr/local/bin/start.sh

RUN chmod +x /usr/local/bin/start.sh

# Expor porta 80
EXPOSE 80

# Comando de inicialização
CMD ["/usr/local/bin/start.sh"] 